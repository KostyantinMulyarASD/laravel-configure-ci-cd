name: Pull Request CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build-project:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: List data
        run: ls -alh ./

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: none
          tools: composer, cs2pr

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Setup cache
        uses: pat-s/always-upload-cache@v1.1.4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use the hash of composer.json as the key for your cache if you do not commit composer.lock.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-suggest --no-progress

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: project
          path: public

  phpcs:
    runs-on: ubuntu-latest
    needs: [build-project]
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: List data
        run: ls -alh ./
      - name: Detect coding standard violations
        run: vendor/bin/phpcs -q --report=checkstyle | cs2pr --graceful-warnings

  phpstan:
    runs-on: ubuntu-latest
    needs: [build-project]
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: List data
        run: ls -alh ./
      - name: PHPStan Static Analysis
        uses: php-actions/phpstan@v2
        with:
          memory_limit: 256M

  deploy:
    runs-on: ubuntu-latest
    needs: [phpstan, phpcs]
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: Deploy changes
        run: ls -alh ./
